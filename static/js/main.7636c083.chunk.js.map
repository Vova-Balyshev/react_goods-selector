{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","goods","goodsFromServer","this","length","lastIndex","firstPart","slice","joined","join","goodName","includes","good","setState","newGoods","filter","el","isSelected","unselectGood","selectGood","className","getHeaderTitle","type","classNames","onClick","clear","map","selectToggle","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCAWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,OAChBC,MAAOC,GAHX,oDAME,WACE,IAAQF,EAAkBG,KAAKJ,MAAvBC,cAER,IAAKA,EAAcI,OACjB,MAAO,oBAGT,GAA6B,IAAzBJ,EAAcI,OAChB,MAAM,GAAN,OAAUJ,EAAc,GAAxB,gBAGF,IAAMK,EAAYL,EAAcI,OAAS,EACnCE,EAAYN,EAAcO,MAAM,GAAI,GACpCC,EAAM,UAAMF,EAAUG,KAAK,MAArB,gBAAkCT,EAAcK,IAE5D,MAAM,GAAN,OAAUG,EAAV,mBArBJ,wBAwBE,SAAWE,GAGT,OAF0BP,KAAKJ,MAAvBC,cAEaW,SAASD,KA3BlC,wBA8BE,SAAWE,GACT,IAAQZ,EAAkBG,KAAKJ,MAAvBC,cAERG,KAAKU,SAAS,CAAEb,cAAc,GAAD,mBAAMA,GAAN,CAAqBY,QAjCtD,0BAoCE,SAAaA,GACX,IACME,EADoBX,KAAKJ,MAAvBC,cACuBe,QAAO,SAAAC,GAAE,OAAIA,IAAOJ,KAEnDT,KAAKU,SAAS,CAAEb,cAAec,MAxCnC,0BA2CE,SAAaJ,GACPP,KAAKc,WAAWP,GAClBP,KAAKe,aAAaR,GAKpBP,KAAKgB,WAAWT,KAlDpB,mBAqDE,WACEP,KAAKU,SAAS,CAAEb,cAAe,OAtDnC,oBAyDE,WAAU,IAAD,OACCC,EAAUE,KAAKJ,MAAfE,MACAD,EAAkBG,KAAKJ,MAAvBC,cAER,OACE,uBAAMoB,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACGjB,KAAKkB,mBAER,wBACEC,KAAK,SACLF,UAAWG,IAAW,cACpB,CACE,0BAA2BvB,EAAcI,SAE7CoB,QAAS,WACP,EAAKC,SAPT,sBAcF,6BACGxB,EAAMyB,KAAI,SAAAd,GACT,IAAMK,EAAa,EAAKA,WAAWL,GAEnC,OACE,qBAEEQ,UAAWG,IAAW,OACpB,CACE,eAAgBN,IAJtB,UAOGL,EACD,wBACEU,KAAK,SACLF,UAAWG,IACT,aACA,CACE,gBAAiBN,EACjB,aAAcA,IAGlBO,QAAS,kBAAM,EAAKG,aAAaf,IATnC,SAWIK,EACE,SACA,aApBDL,eAvFrB,GAAyBgB,IAAMC,WCP/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7636c083.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport goodsFromServer from './goods';\n\ninterface State {\n  selectedGoods: string[];\n  goods: string[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n    goods: goodsFromServer,\n  };\n\n  getHeaderTitle() {\n    const { selectedGoods } = this.state;\n\n    if (!selectedGoods.length) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      return `${selectedGoods[0]} is selected`;\n    }\n\n    const lastIndex = selectedGoods.length - 1;\n    const firstPart = selectedGoods.slice(0, -1);\n    const joined = `${firstPart.join(', ')} and ${selectedGoods[lastIndex]}`;\n\n    return `${joined} are selected`;\n  }\n\n  isSelected(goodName: string) {\n    const { selectedGoods } = this.state;\n\n    return selectedGoods.includes(goodName);\n  }\n\n  selectGood(good: string) {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: [...selectedGoods, good] });\n  }\n\n  unselectGood(good: string) {\n    const { selectedGoods } = this.state;\n    const newGoods = selectedGoods.filter(el => el !== good);\n\n    this.setState({ selectedGoods: newGoods });\n  }\n\n  selectToggle(goodName: string) {\n    if (this.isSelected(goodName)) {\n      this.unselectGood(goodName);\n\n      return;\n    }\n\n    this.selectGood(goodName);\n  }\n\n  clear() {\n    this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    const { goods } = this.state;\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {this.getHeaderTitle()}\n          </h1>\n          <button\n            type=\"button\"\n            className={classNames('Good__clear',\n              {\n                'Good__clear--unvisible': !selectedGoods.length,\n              })}\n            onClick={() => {\n              this.clear();\n            }}\n          >\n            Clear\n          </button>\n        </header>\n\n        <ul>\n          {goods.map(good => {\n            const isSelected = this.isSelected(good);\n\n            return (\n              <li\n                key={good}\n                className={classNames('Good',\n                  {\n                    'Good--active': isSelected,\n                  })}\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'controlBtn',\n                    {\n                      'btn--success': !isSelected,\n                      'btn--error': isSelected,\n                    },\n                  )}\n                  onClick={() => this.selectToggle(good)}\n                >\n                  {(isSelected\n                    ? 'Remove'\n                    : 'Select'\n                  )}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}